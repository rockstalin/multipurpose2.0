{
  "_args": [
    [
      {
        "raw": "basic-authentication@1.7.0",
        "scope": null,
        "escapedName": "basic-authentication",
        "name": "basic-authentication",
        "rawSpec": "1.7.0",
        "spec": "1.7.0",
        "type": "version"
      },
      "/Users/stalin/Documents/R&D Project/multipurpose_1.0-master/node_modules/logger-request"
    ]
  ],
  "_from": "basic-authentication@1.7.0",
  "_id": "basic-authentication@1.7.0",
  "_inCache": true,
  "_location": "/basic-authentication",
  "_nodeVersion": "6.5.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/basic-authentication-1.7.0.tgz_1473688812881_0.8022170786280185"
  },
  "_npmUser": {
    "name": "hex7c0",
    "email": "hex7c0@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "basic-authentication@1.7.0",
    "scope": null,
    "escapedName": "basic-authentication",
    "name": "basic-authentication",
    "rawSpec": "1.7.0",
    "spec": "1.7.0",
    "type": "version"
  },
  "_requiredBy": [
    "/logger-request"
  ],
  "_resolved": "https://registry.npmjs.org/basic-authentication/-/basic-authentication-1.7.0.tgz",
  "_shasum": "a1d0eefb7c76e7b3bc70daf13b4585dbea9965b1",
  "_shrinkwrap": null,
  "_spec": "basic-authentication@1.7.0",
  "_where": "/Users/stalin/Documents/R&D Project/multipurpose_1.0-master/node_modules/logger-request",
  "author": {
    "name": "hex7c0",
    "email": "hex7c0@gmail.com",
    "url": "https://hex7c0.github.io/"
  },
  "bugs": {
    "url": "https://github.com/hex7c0/basic-authentication/issues",
    "email": "hex7c0@gmail.com"
  },
  "dependencies": {
    "setheaders": "0.1.7"
  },
  "description": "http basic authentication",
  "devDependencies": {
    "cookie-parser": "~1.4",
    "express": "~4.14",
    "grunt-contrib-clean": "~1.0",
    "grunt-contrib-jshint": "~1.0",
    "grunt-contrib-uglify": "~2.0",
    "grunt-endline": "~0.5",
    "istanbul": "~0.4",
    "mocha": "~3.0",
    "supertest": "~2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a1d0eefb7c76e7b3bc70daf13b4585dbea9965b1",
    "tarball": "https://registry.npmjs.org/basic-authentication/-/basic-authentication-1.7.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "gitHead": "6d560f13682cb8151b6f29b3ed046e1ed7900c94",
  "homepage": "https://github.com/hex7c0/basic-authentication",
  "keywords": [
    "basic",
    "basic-auth",
    "authentication",
    "authorization"
  ],
  "license": "GPL-3.0",
  "main": "index.min.js",
  "maintainers": [
    {
      "name": "hex7c0",
      "email": "0x7c0@teboss.tk"
    }
  ],
  "name": "basic-authentication",
  "optionalDependencies": {},
  "preferGlobal": false,
  "readme": "# [basic-authentication](https://github.com/hex7c0/basic-authentication)\n\n[![NPM version](https://img.shields.io/npm/v/basic-authentication.svg)](https://www.npmjs.com/package/basic-authentication)\n[![Linux Status](https://img.shields.io/travis/hex7c0/basic-authentication.svg?label=linux)](https://travis-ci.org/hex7c0/basic-authentication)\n[![Windows Status](https://img.shields.io/appveyor/ci/hex7c0/basic-authentication.svg?label=windows)](https://ci.appveyor.com/project/hex7c0/basic-authentication)\n[![Dependency Status](https://img.shields.io/david/hex7c0/basic-authentication.svg)](https://david-dm.org/hex7c0/basic-authentication)\n[![Coveralls](https://img.shields.io/coveralls/hex7c0/basic-authentication.svg)](https://coveralls.io/r/hex7c0/basic-authentication)\n\nBasic authentication is method for a HTTP user agent to provide a user name and password.\n\n## Installation\n\nInstall through NPM\n\n```bash\nnpm install basic-authentication\n```\nor\n```bash\ngit clone git://github.com/hex7c0/basic-authentication.git\n```\n\n## API\n\ninside expressjs project like a middleware\n```js\nvar authentication = require('basic-authentication')();\n\nvar app = require('express')();\napp.use(authentication);\n```\ninside expressjs project like a callback for certain route\n```js\nvar authentication = require('basic-authentication')();\n\nvar app = require('express')();\napp.get('/', authentication, function(req, res) {\n\n    res.send('ok');\n});\n```\ninside routing like a function\n```js\nvar authentication = require('basic-authentication')({functions: true});\n\nvar app = require('express')();\napp.get('/', function(req, res) {\n\n    var user = authentication(req);\n    if (user == 'foo') {\n        res.send('ok');\n    } else {\n        res.send('ko');\n    }\n});\n```\n\n### authentication(options)\n\n#### options\n\n - `user` - **String** User for web basic access authentication *(default \"admin\")*\n - `password` - **String** Password for web basic access authentication *(default \"password\")*\n - `file` - **String** Path of htpasswd file *(default \"disabled\")*\n - `hash` - **String** Type of [hash](http://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm) inside your htpasswd file *(default \"md5\")*\n - `agent` - **String** Browser User Agent for web authentication *(default \"all accepted\")*\n - `realm` - **String** Realm for web authentication *(default \"Authorization required\")*\n - `ending` - **Boolean** Flag for send `res.end` (response) to client after error or wrong password (not in \"functions\" mode) *(default \"true\")*\n - `functions` - **Boolean** Flag for using module like a function *(default \"false\")*\n - `legacy` - **Boolean** Flag for using module like a function that return an Object *(default \"false\")*\n - `suppress` - **Boolean** Suppress all routing error *(default \"false\")*\n\nin `functions` mode, it return a Base64 **String**; otherwise, if some errors occurred, return an Empty **String**\n\nin `legacy` mode, it return an **Object** `{user, password}`; otherwise, if some errors occurred, return an Empty **Object**\n\n## Examples\n\nTake a look at my [examples](examples)\n\n### [License GPLv3](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hex7c0/basic-authentication.git"
  },
  "scripts": {
    "prepublish": "npm prune",
    "test": "mocha --bail --check-leaks",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly"
  },
  "version": "1.7.0"
}
